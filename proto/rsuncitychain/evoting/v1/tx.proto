syntax = "proto3";

package rsuncitychain.evoting.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "rsuncitychain/evoting/v1/params.proto";
import "rsuncitychain/evoting/v1/proposal.proto";
import "rsuncitychain/evoting/v1/vote.proto";

option go_package = "rsuncitychain/x/evoting/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc CreateProposal (MsgCreateProposal) returns (MsgCreateProposalResponse);
  rpc UpdateProposal (MsgUpdateProposal) returns (MsgUpdateProposalResponse);
  rpc DeleteProposal (MsgDeleteProposal) returns (MsgDeleteProposalResponse);
  rpc CreateVote     (MsgCreateVote    ) returns (MsgCreateVoteResponse    );
  rpc UpdateVote     (MsgUpdateVote    ) returns (MsgUpdateVoteResponse    );
  rpc DeleteVote     (MsgDeleteVote    ) returns (MsgDeleteVoteResponse    );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                               "authority";
  option           (amino.name) = "rsuncitychain/x/evoting/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       =  1;
  string index         =  2;
  string proposalId    =  3;
  string title         =  4;
  string description   =  5;
  string votingOptions =  6;
  string startTime     =  7;
  string endTime       =  8;
  string status        =  9;
  string totalVotes    = 10;
  string createdAt     = 11;
}

message MsgCreateProposalResponse {}

message MsgUpdateProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       =  1;
  string index         =  2;
  string proposalId    =  3;
  string title         =  4;
  string description   =  5;
  string votingOptions =  6;
  string startTime     =  7;
  string endTime       =  8;
  string status        =  9;
  string totalVotes    = 10;
  string createdAt     = 11;
}

message MsgUpdateProposalResponse {}

message MsgDeleteProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string index   = 2;
}

message MsgDeleteProposalResponse {}

message MsgCreateVote {
  option (cosmos.msg.v1.signer) = "creator";
  string creator        =  1;
  string index          =  2;
  string voteId         =  3;
  string proposalId     =  4;
  string voterAddress   =  5;
  string selectedOption =  6;
  string voterName      =  7;
  string timestamp      =  8;
  string tx             =  9;
  string createdAt      = 10;
}

message MsgCreateVoteResponse {}

message MsgUpdateVote {
  option (cosmos.msg.v1.signer) = "creator";
  string creator        =  1;
  string index          =  2;
  string voteId         =  3;
  string proposalId     =  4;
  string voterAddress   =  5;
  string selectedOption =  6;
  string voterName      =  7;
  string timestamp      =  8;
  string tx             =  9;
  string createdAt      = 10;
}

message MsgUpdateVoteResponse {}

message MsgDeleteVote {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string index   = 2;
}

message MsgDeleteVoteResponse {}

